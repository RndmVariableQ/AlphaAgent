
import pandas as pd
import numpy as np
import os
from rdagent.components.coder.factor_coder.expr_parser import parse_expression, parse_symbol
from rdagent.components.coder.factor_coder.function_lib import (
    ABS, ADD, AND, CORR, COUNT, COVARIANCE, DECAYLINEAR, DELAY, DELTA, DIVIDE, 
    EMA, EXP, FILTER, HIGHDAY, LOG, LOWDAY, MAX, MEAN, MEDIAN, MIN, MULTIPLY, 
    OR, POW, PROD, RANK, REGBETA, REGRESI, SEQUENCE, SIGN, SMA, SQRT, STD, 
    SUBTRACT, SUM, SUMAC, SUMIF, TS_MAX, TS_MIN, TS_RANK, TS_ZSCORE, WMA, ZSCORE,
    RSI, BB_MIDDLE, BB_UPPER, BB_LOWER
)


def calculate_factor(expr: str, name: str):
    # Stock DataFrame
    # df.columns: ['$open', '$close', '$high', '$low', '$volume']
    df = pd.read_hdf('./daily_pv.h5', key='data')
    
    expr = parse_symbol(expr, df.columns)
    expr = parse_expression(expr)

    # replace 'var_name' by 'df['$var_name']
    for col in df.columns:
        expr = expr.replace(col[1:], f"df[\'{col}\']")

    df[name] = eval(expr)
    result = df[name].astype(np.float64)

    if os.path.exists('result.h5'):
        os.remove('result.h5')
    result.to_hdf('result.h5', key='data')

if __name__ == '__main__':
    # Input factor expression. Do NOT use the variable format like "df['$xxx']" in factor expressions. Instead, you should use "$xxx". 
    expr = "{{ expression }}" # Your output factor expression will be filled in here
    name = "{{ factor_name }}" # Your output factor name will be filled in here
    calculate_factor(expr, name)